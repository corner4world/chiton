#!/bin/bash

########################################################################
 #
 #     This file is part of Chiton.
 #
 #   Chiton is free software: you can redistribute it and/or modify
 #   it under the terms of the GNU General Public License as published by
 #   the Free Software Foundation, either version 3 of the License, or
 #   (at your option) any later version.
 #
 #   Chiton is distributed in the hope that it will be useful,
 #   but WITHOUT ANY WARRANTY; without even the implied warranty of
 #   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #   GNU General Public License for more details.
 #
 #   You should have received a copy of the GNU General Public License
 #   along with Chiton.  If not, see <https://www.gnu.org/licenses/>.
 #
 #   Copyright 2020 Ed Martin <edman007@edman007.com>
 #
 ########################################################################

set -e
export PATH="/sbin:/usr/sbin:$PATH"

#database settings
MYSQL_HOST="localhost"
MYSQL_DB=@PKGNAME@
MYSQL_INSTALL_USER="root"
MYSQL_INSTALL_PW=""
MYSQL_USER=@PKGNAME@
BACKEND_USER=@PKGNAME@

#make a decent default PW
MYSQL_USER_PW=
PW_ENCODE=`which mimencode || echo false`
if [ "x$PW_ENCODE" != "xfalse" ]; then
    MYSQL_USER_PW=`dd if=/dev/random bs=1 count=15 2>/dev/null  | $PW_ENCODE`
else
    PW_ENCODE=`which base64 || echo false`
    if [ "x$PW_ENCODE" != "xfalse" ]; then
        MYSQL_USER_PW=`dd if=/dev/random bs=1 count=15 2>/dev/null  | $PW_ENCODE`
    else
        MYSQL_USER_PW=changeme
    fi
fi


HTML_SRC_DIR=@pkgdatadir@/web
STATE_DIR=@localstatedir@/@PKGNAME@
APACHE_CFG_DIR=@apachecfgdir@
CFGDIR=@cfgdir@
SKIP_ALL=N
WEBDIR=/@PKGNAME@
VID_DIR=$STATE_DIR/vids

#Packaging scripts might want to change this
APACHE_USER=apache
QUIET_MODE=N
SKIP_DB=N

#take a couple of guesses
if ! getent passwd $APACHE_USER > /dev/null ; then
    APACHE_USER=httpd
    if ! getent passwd $APACHE_USER > /dev/null ; then
        APACHE_USER=www-data
    fi
fi

#check for an old script, pull the DB info from the old config
if [ -r "$CFGDIR/chiton.cfg" ]; then
    MYSQL_USER=$(cat "$CFGDIR/chiton.cfg" | grep db-user | sed -e s/\'//g -e 's/ //g'  | cut -d = -f 2)
    MYSQL_USER_PW=$(cat "$CFGDIR/chiton.cfg" | grep db-password | sed -e s/\'//g -e 's/ //g'  | cut -d = -f 2)
    MYSQL_HOST=$(cat "$CFGDIR/chiton.cfg" | grep db-host | sed -e s/\'//g -e 's/ //g'  | cut -d = -f 2)
    MYSQL_DB=$(cat "$CFGDIR/chiton.cfg" | grep db-database | sed -e s/\'//g -e 's/ //g'  | cut -d = -f 2)
fi

# Check all our options
while getopts "hH:d:U:P:u:p:yv:qk" opt
do
    case $opt in
        (h) #help
            echo "$0 [args]"
            echo "$0 will setup chiton"
            echo "args:"
            echo "  -h"
            echo -e "\tThis help message"
            echo "  -H <host>"
            echo -e "\tSet the Database Hostname"
            echo "  -d <database>"
            echo -e "\tSet the database to use"
            echo "  -U <user>"
            echo -e "\tSet the database administrator user (root, usually)"
            echo "  -P <pass>"
            echo -e "\tSet the database administrator password"
            echo "  -p <pass>"
            echo -e "\tSet the databse password for chiton"
            echo "  -y"
            echo -e "\tSelect the default answer to everything"
            echo "  -v <dir>"
            echo -e "\tSet the default location for saving videos"
            echo "  -q"
            echo -e "\tQuiet Output"
            echo "  -k"
            echo -e "\tSkip Database and user creation"

            ;;

        (H)
            MYSQL_HOST="$OPTARG"
            ;;
        (d)
            MYSQL_DB="$OPTARG"
            ;;
        (U)
            MYSQL_INSTALL_USER="$OPTARG"
            ;;
        (P)
            MYSQL_INSTALL_PW="$OPTARG"
            ;;
        (u)
            MYSQL_USER="$OPTARG"
            ;;
        (p)
            MYSQL_USER_PW="$OPTARG"
            ;;
        (y)
            SKIP_ALL="Y"
            ;;
        (v)
            VID_DIR="$OPTARG"
            ;;
        (q)
            QUIET_MODE="Y"
            ;;
        (k)
            SKIP_DB="Y"
            ;;

    esac
done

function log_msg() {
    if [ "$QUIET_MODE" = "N" ]; then
        echo "$@"
    fi
}

log_msg "This will guide you through setting up chiton"
log_msg

var=""
log_msg "Database Host [$MYSQL_HOST]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    MYSQL_HOST="$var"
fi

log_msg "Database DB [$MYSQL_DB]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    MYSQL_DB="$var"
fi

log_msg "Database Administrator User [$MYSQL_INSTALL_USER]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    MYSQL_INSTALL_USER="$var"
fi


log_msg "Database Administrator Password []:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -s -p '> ' var
fi
if [[ -n $var ]]; then
    MYSQL_INSTALL_PW="$var"
fi

if [[ -n $MYSQL_INSTALL_PW ]]; then
    MYSQL_INSTALL_PW_CLI="-p${MYSQL_INSTALL_PW}"
else
    MYSQL_INSTALL_PW_CLI=""
fi

log_msg "Database User [$MYSQL_USER]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    MYSQL_USER="$var"
fi

log_msg "Database User's Password []:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -s -p '> ' var
fi
if [[ -n $var ]]; then
    MYSQL_USER_PW="$var"
fi

log_msg "Apache Configuration Directory [$APACHE_CFG_DIR]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    APACHE_CFG_DIR="$var"
fi

log_msg "URL path on webserver (with leading slash) [$WEBDIR]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    WEBDIR="$var"
fi


log_msg "Location for saving videos [$VID_DIR]:"
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ -n $var ]]; then
    VID_DIR="$var"
fi

#escape all these variables
MYSQL_HOST_ESC=${MYSQL_HOST//\'/\\\'}
MYSQL_DB_ESC=${MYSQL_DB//\'/\\\'}
MYSQL_USER_ESC=${MYSQL_USER//\'/\\\'}
MYSQL_USER_PW_ESC=${MYSQL_USER_PW//\'/\\\'}

if [[ "SKIP_DB" = "Y" ]]; then
    log_msg "Skipping DB & DB User creation"
else
    log_msg "Should I create the database? [y/n]: "
    if [ "$SKIP_ALL" != "Y" ]; then
        read -p '> ' var
    fi
    if [[ "$var" == "y" || "$var" == "" || "$SKIP_ALL" == "Y" ]]; then
        mysql -u "$MYSQL_INSTALL_USER" -h "$MYSQL_HOST" "$MYSQL_INSTALL_PW_CLI" <<EOF
          CREATE DATABASE IF NOT EXISTS \`${MYSQL_DB_ESC}\`;
EOF
    fi

    log_msg "Should I create the database user '$MYSQL_USER'@'localhost' and grant all privs on $MYSQL_DB? [y/n]: "
    if [ "$SKIP_ALL" != "Y" ]; then
        read -p '> ' var
    fi

    if [[ "$var" == "y" || "$var" == "" || "$SKIP_ALL" == "Y" ]]; then
        mysql -u "$MYSQL_INSTALL_USER" -h "$MYSQL_HOST" "$MYSQL_INSTALL_PW_CLI" <<EOF
          CREATE USER IF NOT EXISTS '${MYSQL_USER_ESC}'@'localhost' IDENTIFIED BY '${MYSQL_USER_PW_ESC}';
          GRANT ALL PRIVILEGES ON \`${MYSQL_DB_ESC}\`.* TO '${MYSQL_USER_ESC}'@'localhost';
          FLUSH PRIVILEGES;
EOF
    fi
fi

#create the user if they don't already exist
log_msg "Should I create the system user \`$BACKEND_USER\`? [Y/n]: "
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ "$var" == "y" || "$SKIP_ALL" == "Y" ]]; then
    if getent passwd $BACKEND_USER > /dev/null ; then
        log_msg "The user $BACKEND_USER already exists"
    else
        useradd $BACKEND_USER -d $STATE_DIR -r -U
    fi
fi

log_msg "Should I add \`$APACHE_USER\` to the group $BACKEND_USER? [Y/n]: "
if [ "$SKIP_ALL" != "Y" ]; then
    read -p '> ' var
fi
if [[ "$var" == "y" || "$SKIP_ALL" == "Y" ]]; then
    if getent passwd $APACHE_USER > /dev/null ; then
        usermod -a -G $BACKEND_USER $APACHE_USER
    else
        log_msg "The user $APACHE_USER does not exist"
    fi
fi

log_msg "Creating the configs..."

#and for sed...
MYSQL_HOST_SED=${MYSQL_HOST_ESC//,/\\,}
MYSQL_DB_SED=${MYSQL_DB_ESC//,/\\,}
MYSQL_USER_SED=${MYSQL_USER_ESC//,/\\,}
MYSQL_USER_PW_SED=${MYSQL_USER_PW_ESC//,/\\,}

if [ -r $CFGDIR/chiton.cfg ]; then
    mv $CFGDIR/chiton.cfg $CFGDIR/chiton.cfg.bak
fi
sed -e "s,[@]DB_HOST[@],'$MYSQL_HOST_SED',g" \
    -e "s,[@]DB_USER[@],'$MYSQL_USER_SED',g" \
    -e "s,[@]DB_PASS[@],'$MYSQL_USER_PW_SED',g" \
    -e "s,[@]DB_DB[@],'$MYSQL_DB_SED',g" \
    -e "s,[@]VID_DIR[@],'$VID_DIR',g" \
    $CFGDIR/chiton.cfg.template > $CFGDIR/chiton.cfg

if [ -r $CFGDIR/config.php ]; then
    mv $CFGDIR/config.php $CFGDIR/config.php.bak
fi
sed -e "s,[@]DB_HOST[@],'$MYSQL_HOST_SED',g" \
    -e "s,[@]DB_USER[@],'$MYSQL_USER_SED',g" \
    -e "s,[@]DB_PASS[@],'$MYSQL_USER_PW_SED',g" \
    -e "s,[@]DB_DB[@],'$MYSQL_DB_SED',g" \
    -e "s,[@]SMARTY_COMPILE_DIR[@],$STATE_DIR/compile,g" \
    -e "s,[@]SMARTY_CACHE_DIR[@],$STATE_DIR/cache,g" \
    -e "s,[@]CFG_FILE[@],'$CFGDIR/chiton.cfg',g" \
    $CFGDIR/config.template.php > $CFGDIR/config.php

#secure our passwords
chown root:$BACKEND_USER $CFGDIR/config.php $CFGDIR/chiton.cfg
chmod 640 $CFGDIR/config.php $CFGDIR/chiton.cfg

#make sure all the directories we need also exist
mkdir -p $STATE_DIR/compile
mkdir -p $STATE_DIR/cache
mkdir -p $VID_DIR
chown $BACKEND_USER:$BACKEND_USER -R $STATE_DIR $VID_DIR
chmod 770 $STATE_DIR/compile $STATE_DIR/cache $VID_DIR

#and configure apache
if [ -r $APACHE_CFG_DIR/apache-chiton.conf ]; then
    APACHE_NEW_CFG=$APACHE_CFG_DIR/apache-chiton.conf.new
else
    APACHE_NEW_CFG=$APACHE_CFG_DIR/apache-chiton.conf
fi

sed -e "s,[@]root_path[@],\"$WEBDIR\",g" \
    -e "s,[@]vid_path[@],\"$WEBDIR/vids\",g" \
    -e "s,[@]webdir[@],\"@pkgdatadir@/web\",g" \
    -e "s,[@]cfgdir[@],\"$CFGDIR\",g" \
    -e "s,[@]viddir[@],\"$VID_DIR\",g" \
    @pkgdatadir@/apache/apache-chiton.conf > $APACHE_NEW_CFG

if [ "x@apacheappendconf@" != "zno" ]; then
    #append an include line to @apacheappendconf@
    if [ -f "@apacheappendconf@" ] && ! grep "$APACHE_CFG_DIR/apache-chiton.conf" "@apacheappendconf@" ; then
        log_msg '# Enable Chiton NVR' >> @apacheappendconf@
        log_msg "Include $APACHE_CFG_DIR/apache-chiton.conf" >> @apacheappendconf@
    fi
fi

if [ "x@apachesymlinkdir@" != "xno" ]; then
    if [ -d @apachesymlinkdir@ ] && [ ! -f @apachesymlinkdir@/apache-chiton.conf ] ; then
        ln -s $APACHE_CFG_DIR/apache-chiton.conf @apachesymlinkdir@
    fi
fi

log_msg "$APACHE_CFG_DIR/apache-chiton.conf has been created, you may need to put:"
log_msg -e "\n\n\tInclude \"$APACHE_CFG_DIR/apache-chiton.conf\"\n\n"
log_msg "into your httpd.conf if your distro does not automatically include it"

log_msg "You may now start the backend and restart apache, the URL for your server is:"
log_msg "http://localhost$WEBDIR"
